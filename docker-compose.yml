services:
  db:
    image: postgres:16.2
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SETTINGS_MODULE=hard_train.settings

  test:
    build: .
    command: pytest
    volumes:
      - .:/app
    depends_on:
      - db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_SETTINGS_MODULE=hard_train.settings

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:4.0.4-management-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq


  celery:
    build: .
    command: celery -A hard_train worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - db
      - rabbitmq
    networks:
      - default

  flower:
    build: .
    command: celery -A hard_train flower --port=5555 --basic_auth=user:password
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
      - celery

volumes:
  postgres_data:
  rabbitmq-data:

